// primero hacemos un tama√±o para el row
.row {
    // si no hay suficiente width entonces se llenara el 100% del espacio que tiene, si se declara width
    // de forma normal estes es un valor que no puede cambiar
    max-width: $grid-width;
    // background-color: #eee;
    // poner todo en el medio, 0 para arriba y abajo y todo lo qu epuedan derecha e izquierda
    margin: 0 auto;

    // sin el not solo seleccionariamos al last child, este hace lo opuesto,
    // seleccionamos todo menos el last child
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    // selector de elementos que tengan este atributo especifico
    // ^ implica que solo buscamos que el inicio del atributo sea col, el * es todos os que contienen esa parte y $ los que terminan
    [class^='col'] {
        // background-color: orangered;
        // color: #ffffff;
        float: left; //con un left todos se agrupan uno detras de otro a la izquierda
        // cuanod se usa el float pasa el error de se pierde la altura y para eso usamos el clearfix

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        // se hacen solo un row y dejan de ser columnas
        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        // la ventaa es que podemos mezclar unidades usando el calc de css
        width: calc((100% - #{$gutter-horizontal}) / 2);
        // para que funcione la variable debe de encerrarse y llevar un hash
    }

    // &:last-child {
    //     color: aqua;
    // }

    .col-1-of-3 {
        width: calc((100% - 2 *#{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 *#{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 *#{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 *#{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }
    .col-3-of-4 {
        width: calc(3 * ((100% - 3 *#{$gutter-horizontal}) / 4) + 2 *#{$gutter-horizontal});
    }
}

// row:last-child
